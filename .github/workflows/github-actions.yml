name: CI/CD using GitHub Actions & Docker

# main, deploy 브랜치에 push하면 워크플로우 실행
on:
  push:
    branches: [ "main", "deploy" ]  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Make application.yml
        run: |
          mkdir ./src/main/resources 
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
      
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |           
            sudo docker rm -f $(sudo docker ps -qa)       
            sudo docker pull ${{ secrets.DOCKER_REPO }}:latest
            docker-compose up -d
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_REPO }}:latest            
            sudo docker image prune -f
