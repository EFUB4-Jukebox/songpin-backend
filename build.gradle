plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'sws'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.0.0'// spotify
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' //swagger ui
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' //jjwt
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' //redis
	implementation 'org.springframework.boot:spring-boot-starter-cache' //캐시
	implementation 'org.json:json:20231013' //JsonObject 사용 관련
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.2' //mail
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.2' //thymeleaf
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1' //Jackson - ObjectMapper 시간 직렬화 관련
}

tasks.named('test') {
	useJUnitPlatform()
}